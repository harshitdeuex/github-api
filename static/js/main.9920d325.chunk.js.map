{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["maleDummyImage","femaleDummyImage","BASE_URL","DEFAULT_ERROR_MESSAGE","App","useState","firstUserError","setFirstUserError","firstUserData","setFirstUserData","firstUserImage","setFirstUserImage","secondUserError","setSecondUserError","secondUserData","setSecondUserData","secondUserImage","setSecondUserImage","firstUserName","setFirstUserName","secondUserName","setSecondUserName","emptyInputFields","getFirstUserData","userName","a","axios","get","then","response","data","image","avatar_url","catch","error","statusText","console","log","request","XMLHttpRequest","getSecondUserData","className","src","alt","value","onChange","e","target","placeholder","id","type","login","name","toUpperCase","public_repos","onClick","inputFirst","document","getElementById","trim","toLowerCase","inputSecond","includes","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9920d325.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios';\n\nconst maleDummyImage = \"https://st.depositphotos.com/2101611/3925/v/600/depositphotos_39258143-stock-illustration-businessman-avatar-profile-picture.jpg\";\nconst femaleDummyImage = \"https://st2.depositphotos.com/4111759/12123/v/600/depositphotos_121233300-stock-illustration-female-default-avatar-gray-profile.jpg\";\nconst BASE_URL = \"https://api.github.com/users/\"; \nconst DEFAULT_ERROR_MESSAGE = \"NOT FOUND\";\n\nfunction App() {\n\n  const [firstUserError, setFirstUserError] = useState(\"\");\n  const [firstUserData, setFirstUserData] = useState(null);\n  const [firstUserImage, setFirstUserImage] = useState(maleDummyImage);\n  const [secondUserError, setSecondUserError] = useState(\"\");\n  const [secondUserData, setSecondUserData] = useState(null);\n  const [secondUserImage, setSecondUserImage] = useState(femaleDummyImage);\n  const [firstUserName, setFirstUserName] = useState(\"\");\n  const [secondUserName, setSecondUserName] = useState(\"\");\n\n  const resetProfiles = () => {\n    setFirstUserError(\"\");\n    setFirstUserData(null);\n    setFirstUserImage(maleDummyImage);\n    setSecondUserError(\"\");\n    setSecondUserData(null);\n    setSecondUserImage(femaleDummyImage);\n  }\n\n  const emptyInputFields = () => {\n    setFirstUserName(\"\");\n    setSecondUserName(\"\");\n  }\n\n  const getFirstUserData = async (userName) => {\n    \n      axios.get(BASE_URL + userName)\n      .then((response) => {\n      const data = response.data;\n      const image = response.data.avatar_url;\n      setFirstUserImage(image);\n      setFirstUserData(data);\n      emptyInputFields();\n       })\n      .catch((error) => {\n        if(error.response){\n          setFirstUserError(error.response.statusText);\n          console.log(\"Response Error 1: \",error.response);\n        } else if (error.request){\n          setFirstUserError(error.request.XMLHttpRequest.statusText)\n          console.log(\"Request error 1: \",error.request);\n        } else {\n          setFirstUserError(\"Unknown Error\");\n          console.log(\"Unknown error 1: \",error);\n        }\n      })    \n  }\n\n  const getSecondUserData = async (userName) => { \n\n    axios.get(BASE_URL + userName)\n      .then((response) => {\n      const data = response.data;\n      const image = response.data.avatar_url;\n      setSecondUserImage(image);\n      setSecondUserData(data);\n      emptyInputFields();\n       })\n      .catch((error) => {\n        if(error.response){\n          setSecondUserError(error.response.statusText);\n          console.log(\"Response Error 2: \",error.response);\n        } else if (error.request){\n          setSecondUserError(error.request.XMLHttpRequest.statusText)\n          console.log(\"Request error 2: \",error.request);\n        } else {\n          setSecondUserError(\"Unknown Error\");\n          console.log(\"Unknown error 2: \",error);\n        }\n      })   \n  }\n  const handleSubmit = () => {\n    const inputFirst = document.getElementById(\"input-field-1\").value.trim().toLowerCase();\n    setFirstUserName(inputFirst);\n    const inputSecond = document.getElementById(\"input-field-2\").value.trim().toLowerCase();\n    setSecondUserName(inputSecond);\n    resetProfiles();\n\n    if(inputFirst.includes(\" \") || inputSecond.includes(\" \")){\n      alert(\"Username should not contain space\")\n    } else if (!inputFirst || !inputSecond){\n      alert(\"Please Enter All fields\");\n    } else {\n      getFirstUserData(inputFirst);\n      getSecondUserData(inputSecond);\n    }\n  }\n  \n  return (\n    <div className=\"wrapper\">\n      <div className=\"profile-container\">\n        <img className=\"profile-image\" src={firstUserImage} alt=\"profile 1\"/>\n        <input \n          className=\"input-field\" \n          value={firstUserName} \n          onChange={(e) => setFirstUserName(e.target.value)} \n          placeholder=\"Enter github user name\" \n          id=\"input-field-1\" \n          type=\"text\"\n        />\n        {firstUserError ? <p>User {firstUserError}</p> : \"\"}\n         \n        { firstUserData \n          && \n          <div className=\"data-section\">\n            <p>Username: {firstUserData.login ? firstUserData.login : DEFAULT_ERROR_MESSAGE}</p>\n            <p>Name: {firstUserData.name ? firstUserData.name.toUpperCase() : DEFAULT_ERROR_MESSAGE}</p>\n            <p>Number of Repos: {firstUserData.public_repos ? firstUserData.public_repos : DEFAULT_ERROR_MESSAGE}</p>\n          </div>\n        }        \n      </div>\n\n      <button onClick={handleSubmit}>Get Profile Details</button>\n\n      <div className=\"profile-container\">\n        <img className=\"profile-image\" src={secondUserImage} alt=\"profile 2\"/>\n        <input \n          className=\"input-field\" \n          value={secondUserName} \n          onChange={(e) => setSecondUserName(e.target.value)} \n          placeholder=\"Enter github user name\" \n          id=\"input-field-2\" \n          type=\"text\"\n        />\n\n        {secondUserError ? <p>User {secondUserError}</p> : \"\"}\n         \n        { secondUserData \n          && \n          <div className=\"data-section\">\n            <p>Username: {secondUserData.login ? secondUserData.login : DEFAULT_ERROR_MESSAGE}</p>\n            <p>Name: {secondUserData.name ? secondUserData.name.toUpperCase() : DEFAULT_ERROR_MESSAGE}</p>\n            <p>Number of Repos: {secondUserData.public_repos ? secondUserData.public_repos : DEFAULT_ERROR_MESSAGE}</p>\n        </div>\n        }\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}