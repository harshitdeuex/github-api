{"version":3,"sources":["ProfileContainer.js","App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_ERROR_MESSAGE","ProfileContainer","props","profileData","profileName","setProfileName","profileError","className","src","avatar_url","alt","type","value","onChange","e","target","placeholder","login","name","public_repos","App","useState","firstProfileError","setFirstProfileError","firstProfileData","setFirstProfileData","firstProfileName","setFirstProfileName","secondProfileError","setSecondProfileError","secondProfileData","setSecondProfileData","secondProfileName","setSecondProfileName","getProfileData","userName","setProfileData","setProfileError","a","axios","get","then","response","data","console","log","catch","error","statusText","request","XMLHttpRequest","onClick","inputFirst","trim","toLowerCase","inputSecond","includes","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGMA,EAAwB,YA2BfC,EA1BU,SAACC,GAAW,IAC1BC,EAA0DD,EAA1DC,YAAaC,EAA6CF,EAA7CE,YAAaC,EAAgCH,EAAhCG,eAAgBC,EAAgBJ,EAAhBI,aACjD,OACI,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAgBC,IAAKL,EAAYM,YANnC,0HAMiEC,IAAI,YAClF,uBACEC,KAAK,OACLJ,UAAU,cACVK,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOT,EAAeS,EAAEC,OAAOH,QACzCI,YAAY,2BAEZV,GAAgB,yCAAYA,KAE5BH,IAAgBG,GAEhB,sBAAKC,UAAU,eAAf,UACE,2CAAcJ,EAAYc,OAASjB,KACnC,uCAAUG,EAAYe,MAAQlB,KAC9B,kDAAqBG,EAAYgB,cAAgBnB,YC+DhDoB,MA9Ef,WAAgB,IAAD,EAEqCC,mBAAS,IAF9C,mBAENC,EAFM,KAEaC,EAFb,OAGmCF,mBAAS,IAH5C,mBAGNG,EAHM,KAGYC,EAHZ,OAImCJ,mBAAS,IAJ5C,mBAINK,EAJM,KAIYC,EAJZ,OAMuCN,mBAAS,IANhD,mBAMNO,EANM,KAMcC,EANd,OAOqCR,mBAAS,IAP9C,mBAONS,EAPM,KAOaC,EAPb,OAQqCV,mBAAS,IAR9C,mBAQNW,EARM,KAQaC,EARb,KAePC,EAAc,uCAAG,WAAOC,EAAUC,EAAgBC,GAAjC,SAAAC,EAAA,sEAEbC,IAAMC,IApBD,gCAoBgBL,GAC1BM,MAAK,SAACC,GACP,IAAMC,EAAOD,EAASC,KACtBP,EAAeO,GACfC,QAAQC,IAAI,iBAAkBrB,GAVhCG,EAAoB,IACpBM,EAAqB,IAWnBI,EAAgB,OAEfS,OAAM,SAACC,GACNX,EAAe,IACZW,EAAML,SACPL,EAAgBU,EAAML,SAASM,YACtBD,EAAME,QACfZ,EAAgBU,EAAME,QAAQC,eAAeF,YAE7CX,EAAgB,oBAjBD,2CAAH,0DAsCpB,OACE,sBAAK9B,UAAU,MAAf,UACE,uDACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,YAAeqB,EACfpB,YAAesB,EACfrB,eAAkBsB,EAClBrB,aAAgBgB,IAGlB,wBAAQ6B,QA3BO,WACnB,IAAMC,EAAa1B,EAAiB2B,OAAOC,cAC3C3B,EAAoByB,GACpB,IAAMG,EAAcvB,EAAkBqB,OAAOC,cAC7CrB,EAAqBsB,GAElBH,EAAWI,SAAS,MAAQD,EAAYC,SAAS,KAClDC,MAAM,qCACIL,GAAeG,GAGzBrB,EAAekB,EAAY3B,EAAqBF,GAChDW,EAAeqB,EAAaxB,EAAsBF,IAHlD4B,MAAM,4BAkBJ,iCAEA,cAAC,EAAD,CACEtD,YAAe2B,EACf1B,YAAe4B,EACf3B,eAAkB4B,EAClB3B,aAAgBsB,WClEX8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68306622.chunk.js","sourcesContent":["import React from 'react';\n\nconst maleDummyImage = \"https://st2.depositphotos.com/1502311/12020/v/600/depositphotos_120206862-stock-illustration-profile-picture-vector.jpg\";\nconst DEFAULT_ERROR_MESSAGE = \"Not found\";\nconst ProfileContainer = (props) => {\n    const {profileData, profileName, setProfileName, profileError} = props;\n    return (\n        <div className=\"profile-container\">\n          <img className=\"profile-image\" src={profileData.avatar_url || maleDummyImage} alt=\"profile\"/>\n          <input \n            type=\"text\"\n            className=\"input-field\" \n            value={profileName} \n            onChange={(e) => setProfileName(e.target.value)} \n            placeholder=\"Enter github user name\"  \n          />\n          { profileError && <p>Profile {profileError}</p> }\n          \n          { profileData && !profileError\n            && \n            <div className=\"data-section\">\n              <p>Username: {profileData.login || DEFAULT_ERROR_MESSAGE}</p>\n              <p>Name: {profileData.name || DEFAULT_ERROR_MESSAGE}</p>\n              <p>Number of Repos: {profileData.public_repos || DEFAULT_ERROR_MESSAGE}</p>\n            </div>\n          }        \n        </div>\n    )\n}\n\nexport default ProfileContainer;","import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport ProfileContainer from './ProfileContainer';\n\nconst BASE_URL = \"https://api.github.com/users/\"; \n\n\nfunction App() {\n\n  const [firstProfileError, setFirstProfileError] = useState(\"\");\n  const [firstProfileData, setFirstProfileData] = useState(\"\");\n  const [firstProfileName, setFirstProfileName] = useState(\"\");\n\n  const [secondProfileError, setSecondProfileError] = useState(\"\");\n  const [secondProfileData, setSecondProfileData] = useState(\"\");\n  const [secondProfileName, setSecondProfileName] = useState(\"\");\n\n  const emptyInputFields = () => {\n    setFirstProfileName(\"\");\n    setSecondProfileName(\"\");\n  }\n\n  const getProfileData = async (userName, setProfileData, setProfileError) => {\n    \n      await axios.get(BASE_URL + userName)\n      .then((response) => {\n      const data = response.data;\n      setProfileData(data);\n      console.log(\"Profile data: \", firstProfileData);\n      emptyInputFields();\n      setProfileError(\"\");\n       })\n      .catch((error) => {\n        setProfileData(\"\");\n        if(error.response){\n          setProfileError(error.response.statusText);\n        } else if (error.request){\n          setProfileError(error.request.XMLHttpRequest.statusText)\n        } else {\n          setProfileError(\"Unknown Error\");\n        }\n      })    \n  }\n\n  const handleSubmit = () => {\n    const inputFirst = firstProfileName.trim().toLowerCase();\n    setFirstProfileName(inputFirst);\n    const inputSecond = secondProfileName.trim().toLowerCase();\n    setSecondProfileName(inputSecond);\n\n    if(inputFirst.includes(\" \") || inputSecond.includes(\" \")){\n      alert(\"Username should not contain space\")\n    } else if (!inputFirst || !inputSecond){\n      alert(\"Please Enter All fields\");\n    } else {\n      getProfileData(inputFirst, setFirstProfileData, setFirstProfileError);\n      getProfileData(inputSecond, setSecondProfileData, setSecondProfileError);\n    }\n  }\n  \n  return (\n    <div className=\"app\">\n      <h2>Fetch GitHub Profiles</h2>\n      <div className=\"wrapper\">\n        <ProfileContainer \n          profileData = {firstProfileData}\n          profileName = {firstProfileName}\n          setProfileName = {setFirstProfileName}\n          profileError = {firstProfileError}\n        />\n       \n        <button onClick={handleSubmit}>Get Profile Details</button>\n\n        <ProfileContainer \n          profileData = {secondProfileData}\n          profileName = {secondProfileName}\n          setProfileName = {setSecondProfileName}\n          profileError = {secondProfileError}\n        />\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}