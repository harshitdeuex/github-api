{"version":3,"sources":["ProfileContainer.js","App.js","reportWebVitals.js","index.js"],"names":["DEFAULT_ERROR_MESSAGE","input","timeout","ProfileContainer","props","profileData","profileName","setProfileName","profileError","handleSubmit","className","src","avatar_url","alt","type","value","onChange","e","target","trim","handleChange","onKeyUp","clearTimeout","setTimeout","console","log","placeholder","login","name","public_repos","App","useState","firstProfileError","setFirstProfileError","firstProfileData","setFirstProfileData","firstProfileName","setFirstProfileName","getProfileData","userName","setProfileData","setProfileError","a","axios","get","then","response","data","catch","error","statusText","request","XMLHttpRequest","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAGMA,EAAwB,YAE1BC,EAAQ,GACRC,EAAU,GA0CCC,EAzCU,SAACC,GAAW,IAC1BC,EAAwED,EAAxEC,YAAaC,EAA2DF,EAA3DE,YAAaC,EAA8CH,EAA9CG,eAAgBC,EAA8BJ,EAA9BI,aAAcC,EAAgBL,EAAhBK,aAe/D,OACI,sBAAKC,UAAU,oBAAf,UACE,qBAAKA,UAAU,gBAAgBC,IAAKN,EAAYO,YAvBnC,0HAuBiEC,IAAI,YAClF,uBACEC,KAAK,OACLJ,UAAU,cACVK,MAAOT,EACPU,SAAU,SAACC,GAAD,OApBG,SAACA,GACpBhB,EAAQgB,EAAEC,OAAOH,MAAMI,OACvBZ,EAAeN,GAkBQmB,CAAaH,IAC9BI,QAAS,kBAffC,aAAapB,QACbA,EAAUqB,YAAW,WACnBC,QAAQC,IAAIxB,GACZQ,EAAaR,KACZ,QAYGyB,YAAY,2BAEZzB,GAASO,GAAgB,yCAAYA,KAErCH,IAAgBG,GAEhB,sBAAKE,UAAU,eAAf,UACE,2CAAcL,EAAYsB,OAAS3B,KACnC,uCAAUK,EAAYuB,MAAQ5B,KAC9B,kDAAqBK,EAAYwB,cAAgB7B,YCiBhD8B,MAlDf,WAAgB,IAAD,EAEqCC,mBAAS,IAF9C,mBAENC,EAFM,KAEaC,EAFb,OAGmCF,mBAAS,IAH5C,mBAGNG,EAHM,KAGYC,EAHZ,OAImCJ,mBAAS,IAJ5C,mBAINK,EAJM,KAIYC,EAJZ,KAMPC,EAAc,uCAAG,WAAOC,EAAUC,EAAgBC,GAAjC,SAAAC,EAAA,sEAEbC,IAAMC,IAXD,gCAWgBL,GAC1BM,MAAK,SAACC,GACP,IAAMC,EAAOD,EAASC,KACtBP,EAAeO,GACfvB,QAAQC,IAAI,iBAAkBS,GAC9BO,EAAgB,OAEfO,OAAM,SAACC,GACNT,EAAe,IACZS,EAAMH,SACPL,EAAgBQ,EAAMH,SAASI,YACtBD,EAAME,SACfV,EAAgBQ,EAAME,QAAQC,eAAeF,YAC7C1B,QAAQC,IAAIwB,IAEZR,EAAgB,oBAjBD,2CAAH,0DA4BpB,OACE,sBAAK/B,UAAU,MAAf,UACE,uDACA,qBAAKA,UAAU,UAAf,SACE,cAAC,EAAD,CACEL,YAAe6B,EACf5B,YAAe8B,EACf7B,eAAkB8B,EAClB7B,aAAgBwB,EAChBvB,aAfa,SAACR,GACpBoC,EAAoBpC,GACpBuB,QAAQC,IAAI,aACZa,EAAerC,EAAOkC,EAAqBF,YC3BhCoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c88568df.chunk.js","sourcesContent":["import React from 'react';\n\nconst maleDummyImage = \"https://st2.depositphotos.com/1502311/12020/v/600/depositphotos_120206862-stock-illustration-profile-picture-vector.jpg\";\nconst DEFAULT_ERROR_MESSAGE = \"Not found\";\n\nlet input = \"\";\nlet timeout = \"\";\nconst ProfileContainer = (props) => {\n    const {profileData, profileName, setProfileName, profileError, handleSubmit} = props;\n\n    const handleChange = (e) => {\n      input = e.target.value.trim();\n      setProfileName(input);\n    }\n\n    const handleKeyUp = () => {\n      clearTimeout(timeout)\n      timeout = setTimeout(() => {\n        console.log(input);\n        handleSubmit(input);\n      }, 1500);\n    }\n\n    return (\n        <div className=\"profile-container\">\n          <img className=\"profile-image\" src={profileData.avatar_url || maleDummyImage} alt=\"profile\"/>\n          <input \n            type=\"text\"\n            className=\"input-field\" \n            value={profileName} \n            onChange={(e) => handleChange(e)}\n            onKeyUp={() => handleKeyUp()} \n            placeholder=\"Enter github user name\"  \n          />\n          { input && profileError && <p>Profile {profileError}</p> }\n          \n          { profileData && !profileError\n            && \n            <div className=\"data-section\">\n              <p>Username: {profileData.login || DEFAULT_ERROR_MESSAGE}</p>\n              <p>Name: {profileData.name || DEFAULT_ERROR_MESSAGE}</p>\n              <p>Number of Repos: {profileData.public_repos || DEFAULT_ERROR_MESSAGE}</p>\n            </div>\n          }        \n        </div>\n    )\n}\n\nexport default ProfileContainer;","import './App.css';\nimport React, {useState} from 'react';\nimport axios from 'axios';\nimport ProfileContainer from './ProfileContainer';\n\nconst BASE_URL = \"https://api.github.com/users/\"; \n\n\nfunction App() {\n\n  const [firstProfileError, setFirstProfileError] = useState(\"\");\n  const [firstProfileData, setFirstProfileData] = useState(\"\");\n  const [firstProfileName, setFirstProfileName] = useState(\"\");\n\n  const getProfileData = async (userName, setProfileData, setProfileError) => {\n    \n      await axios.get(BASE_URL + userName)\n      .then((response) => {\n      const data = response.data;\n      setProfileData(data);\n      console.log(\"Profile data: \", firstProfileData);\n      setProfileError(\"\");\n       })\n      .catch((error) => {\n        setProfileData(\"\");\n        if(error.response){\n          setProfileError(error.response.statusText);\n        } else if (error.request){\n          setProfileError(error.request.XMLHttpRequest.statusText)\n          console.log(error);\n        } else {\n          setProfileError(\"Unknown Error\");\n        }\n      })    \n  }\n\n  const handleSubmit = (input) => {\n    setFirstProfileName(input);\n    console.log(\"submitted\");\n    getProfileData(input, setFirstProfileData, setFirstProfileError);\n  }\n  \n  return (\n    <div className=\"app\">\n      <h2>Fetch GitHub Profiles</h2>\n      <div className=\"wrapper\">\n        <ProfileContainer \n          profileData = {firstProfileData}\n          profileName = {firstProfileName}\n          setProfileName = {setFirstProfileName}\n          profileError = {firstProfileError}\n          handleSubmit = {handleSubmit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}